micronaut:
  http:
    client:
      default-charset: UTF-8
      log-level: trace
      proxy-address: http://127.0.0.1:33210
      proxy-type: http

    services:
      telegram:
        default-charset: utf-8
        url: https://api.telegram.org
        connect-timeout: 5s
        read-timeout: 5s
  application:
    name: micronaut-telegram-luck
  server:
    port: 1960
  chatbots:
    telegram:
      endpoint:
        enabled: true
        path: "/telegram"
      bots:
        battleBot:
          token: ${app.luck.bot.webhook.secretToken}
          at-username: '@battleBot'

    folder: botcommands
  security:
    enabled: true
    intercept-url-map:
      - pattern: /**
        httpMethod: OPTIONS
        access:
          - isAnonymous()
      - pattern: /swagger/**
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        access:
          - isAnonymous()
      - pattern: /html/**
        access:
          - isAnonymous()
      - pattern: /telegramBot/callback
        access:
          - isAnonymous()
      - pattern: /v1/**
        access:
          - isAuthenticated()

    authentication: bearer
    token:
      rolesSeparator: ","
      name-key: "sub"
      roles-name: "roles"
      jwt:
        signatures:
          jwks: #work good
            oauth2-vertx:
              url: ${OAUTH2_KEYS:`http://localhost:1910/keys`}
              cache-expiration: 3600
        claims-validators:
          issuer: "oauth2-vertx"
          expiration: true
        enabled: true
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      views:
        paths: classpath:views
        mapping: /html/**
  caches:
    users:
      charset: 'UTF-8'
      maximum-size: 1000
    platform:
      charset: 'UTF-8'
      maximum-size: 100
jpa:
  default:
    compile-time-hibernate-proxies: true
    properties:
      hibernate:
        # dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          auto: none # create create-drop update validate none
        #        connection:
        #          db-type: postgres
        #          url: ${app.db.url:`jdbc:postgresql://coarse-gosling-2563.g95.cockroachlabs.cloud:26257/db2?sslmode=verify-ca`}
        #          url: "jdbc:postgresql://${vertx.pg.client.host}:${vertx.pg.client.port}/${vertx.pg.client.database}?ssl=${vertx.pg.client.ssl}&sslmode=${vertx.pg.client.ssl-mode}"
        #          driverClassName: org.postgresql.Driver
        #          username: ${vertx.pg.client.user}
        #          password: ${vertx.pg.client.password}
        show_sql: true
        format_sql: true
    reactive: false
    entity-scan:
      packages:
        - com.bbbang.luck.domain.po
datasources:
  default:
    driver-class-name: org.postgresql.Driver
    db-type: postgres
    dialect: POSTGRES
    url: "jdbc:postgresql://${vertx.pg.client.host}:${vertx.pg.client.port}/${vertx.pg.client.database}?ssl=${vertx.pg.client.ssl}&sslmode=${vertx.pg.client.ssl-mode}"
    username: ${vertx.pg.client.user}
    password: ${vertx.pg.client.password}
    schema: ${app.db.schema:`luck`}
    connection-timeout: 10000
    auto-commit: true
    idle-timeout: 60
    minimum-idle: 10
    maximum-pool-size: 200
    #data-source: POSTGRES
    transaction-isolation: TRANSACTION_REPEATABLE_READ


#redis.uri: redis://localhost

vertx:
  pg:
    client:
      port: ${app.db.port:`5432` }
      host: ${app.db.host:`localhost` }
      database: ${app.db.database:`db2` }
      user: ${app.db.username:`postgres` }
      password: ${app.db.password:`DEpn1Y9gM3ys2v6g`}
      maxSize: 5
      ssl: false
      ssl-mode: disable
flyway:
  datasources:
    default:
      enabled: false

tron:
  url: "https://api.trongrid.io" # https://api.shasta.trongrid.io    	https://nile.trongrid.io
  key: "02a48b5d-adfe-41aa-acf0-a1785cb7354d"
  contractAddress: "TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t" # 测试网络 nile USDT TXYZopYRdj2D9XRtbG411XZZ3kM5VkAeBf
  rechargeAddress: ${RECHARGE_ADDRESS:`TNK4E772yP6t7xFfZMMLfKQ6pJrByLk5yt`}
app:
  luck:
    bot:
      webhook:
        internalUrl: ${BOT_WEBHOOK_INTERNAL_URL:`https://89df-182-139-188-162.ngrok-free.app`}
        url: ${app.luck.bot.webhook.internalUrl}/telegramBot/callback
        secretToken: ${BOT_WEBHOOK_SECRET_TOKEN:`ceq0vd6p2ehd15jkxs62oedq55hu2qq8`}
        httpApiToken: ${BOT_HTTP_API_TOKEN:`6968916542:AAFseuM2BiI1WhPI5YvIR32CTMyqYU6qyfU`}
    limitBid: ${BET_LIMIT_BID:`5000`}
    reservePrice:  ${BET_RESERVE_PRICE:`5`}
    withdrawalLimit:  ${BET_WITHDRAWAL_LIMIT:`10`}
    odds: ${BET_ODDS:`1.8`}
    redPackNumbers: ${BET_RED_PACK_NUMBERS:`6`}
    water: ${BET_WATER:`4`}
    platformWater: ${BET_PLATFORM_WATER:`2.5`}
    partnerWater: ${BET_PARTNER_WATER:`1.5`}
    agentWater: ${BET_AGENT_WATER:`1.5`}
    inviteRebate: ${BET_INVITE_REBATE:`0.1`}
    magic: ${app.luck.bot.webhook.secretToken}
    redPackUrl: ${app.luck.bot.webhook.internalUrl}/html/img/usdt_luck_boom.jpg
    service:
      financeBotUserId: ${BOT_FINANCE_USER_ID:`430713401`}
      finance: ${FINANCE:`https://t.me/luck_caiwu`}
      playRule: ${PLAY_RULE_SERVICE:`https://t.me/luck_dingyue`}
      customerService: ${CUSTOMER_SERVICE:`https://t.me/luck_kefu`}